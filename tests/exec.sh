#!/bin/sh

exec_test()
{
    touch myfind_out find_out
    args=$1

    ./myfind $args > myfind_out 2> /dev/null
    my_status=$?
    find $args > find_out 2> /dev/null
    status=$?

    if [ -z "$( diff -u myfind_out find_out )" ] && [ $my_status -eq $status ]; then
        echo -n "\033[0;32mPASSED\033[0m "
    else
        echo -n "\033[0;31mFAILED "
        echo -n "\033[0m(expected: $status, got $my_status)\n     âž¤ "
    fi
    echo "./myfind $args"

    rm myfind_out find_out
}

exec_test ""
exec_test "    "
exec_test "tests///////foo    -name bar    "
exec_test "   -H     "
exec_test "-a"
exec_test "    !   "
exec_test "   -a    -o"
exec_test "-a -   a"
exec_test "  !       -o -a -o     -o -a"
exec_test "( -print ! )"
exec_test "( -print -o )"
exec_test "( -print -a )"
exec_test "( -print ! ) )"
exec_test "( ( -print ! ) )"
exec_test "! ( -print -type f ) -a"
exec_test "( -name bar ) ! ( -name baz )"
exec_test "( -name bar ) ! ! ( -name baz )"
exec_test "( -name bar ) ! -o ! -a ! ( -name baz )"
exec_test "( -name bar ) ! ! -name foo -a ! ( -name baz )"
exec_test "! -type f ! ! -a ! ( -o -name baz )"
exec_test "-name bar ! ! ! -name baz"
exec_test "tests/foo"
exec_test "-H -L -L tests/foo -name bar"
exec_test "-L tests/foo -name bar"
exec_test "-L tests/"
exec_test "-P -L tests/foo/ -type f -o -name bar"
exec_test "-H -H -P -L -L -P -L -H -name tests"
exec_test "tests/foo////// -name baz -name bar"
exec_test "tests/foo/// . -name baz ! -name bar"
exec_test "tests/foo// -name baz -a -name bar"
exec_test "tests/foo -name baz -o -name bar"
exec_test "tests/foo/ -name bar -o -name baz"
exec_test "tests/foo/ -print -name baz"
exec_test "tests/foo -name bar ( -name baz -o -name bar ) -type l"
exec_test "tests/foo -name bar ( -name baz -o -name bar ) -type f"
exec_test "tests/foo ! -name bar"
exec_test "tests/foo ( -name bar )"
exec_test "tests/foo ! ( -name bar )"
exec_test "tests/foo ! ( -type f )"
exec_test "tests/foo ! ! ( -name bar )"
exec_test "tests/foo ! ! ! ( -name bar )"
exec_test "tests/foo ! ! ! ! ( -name bar )"
exec_test "tests/foo ! ! ! ! ! ( -name bar )"
exec_test "tests/foo ! ( -name bar ! -name baz )"
exec_test "tests/foo ! -print ( -name bar ! -name baz ) -print"
exec_test "tests/foo ! ( -name bar ! -print -name baz ) -print"
exec_test "tests/foo -name bar -o -print"
exec_test "tests/foo -print -o -name bar"
exec_test "tests/foo -print -a -print"
exec_test "tests/foo -print -o -print"
exec_test "tests/foo -print"
exec_test "-name bar -exec pwd ;"
exec_test "tests/foo -exec pwd ; -exec echo -- {} -- ;"
exec_test "tests/foo -exec pwd ; -a -exec echo -- {} -- ;"
exec_test "tests/foo -exec pwd ; -o -exec echo -- {} {} -- ;"
exec_test "tests/foo -exec pwd ; ! -exec echo -- {} -- {}{{}} ;"
exec_test "tests/foo ! ! -exec pwd ; -exec echo -- {} -- ;"
exec_test "tests/foo ! -exec pwd ; -o ! -exec echo -- {} -- ;"
exec_test "tests/foo ( -exec echo -- {} -- ; ) ( -name bar )"
exec_test "tests/foo ( -exec echo -- {} -- ; ) ( ) ( -name bar )"
exec_test "tests/foo ( ( ( ( -exec echo -- {} -- ; ) ) ) ) ( -name baz ) -type f"
exec_test "tests/foo ( ( -exec echo -- {} -- ; ) ( -name bar )"
exec_test "tests/foo ( ( ( -name bar )"
exec_test "tests/foo ( ( -name bar )"
exec_test "tests/foo ( -name bar ) )"
exec_test "tests/foo ( -name bar ) ) )"
exec_test "tests/foo ( -name bar -type f ) -o -name baz )"
exec_test "tests/foo ( -name bar ) -name baz )"
exec_test "tests/foo ( -name baz ( -name bar ) )"
exec_test "tests/foo -type f ( ( -name bar ) ) )"
exec_test "src/ -type d  \( -name stack.? -o -name chec* \)"
exec_test "-newer tests/foo/bar -o -newer tests/foo/baz"
exec_test "-newer tests/foo/baz -o -newer tests/foo/bar"
exec_test "-newer tests/foo/bar -a -newer tests/qux"
exec_test "-newer tests/foo/bar -o -newer tests/qux"
exec_test "-newer tests/qux -o -newer tests/foo/bar"
exec_test "-newer tests/qux -a -newer tests/foo/bar"
exec_test "-newer tests/foo/bar -o -newer bruh"
exec_test "-newer tests/foo/baz -o -newer brah"
exec_test "-newer breh -a -newer tests/qux"
exec_test "-newer brih -o -newer tests/qux"
exec_test "-newer tests/qux -o -newer tests/foo/"
exec_test "-newer tests/qux -a -newer tests/foo/"
exec_test "-name bar -o -type d"
exec_test "tests/foo -name baz -o ( -type d ) -print"
exec_test "-name bar -o ( -type d -o -type f )"
exec_test "-name bar ( -type d -o -type f )"
exec_test "-name baz ( -type f )"
exec_test "-perm 454"
exec_test "-perm -454"
exec_test "-perm /0000000454"
exec_test "-perm -000000005"
exec_test "-perm -00000000009"
exec_test "-perm -7778"
exec_test "-perm -117"
exec_test "-perm -"
exec_test "-perm 0"
exec_test "-perm /"
exec_test "-perm //"
exec_test "-perm ///"
exec_test "-perm"
exec_test "-perm /004 -o ( -name bar )"
exec_test "-user lycoon"
exec_test "-user lycooZ"
exec_test "-group lycoon"
exec_test "-group lycooZ"
exec_test "-user lycoon -group lycoon"
exec_test "-user lycoon -o -group lycooZ"
exec_test "-user lycooZ -o -group lycoon"
exec_test "-group lycoon -o -user lycooZ"
exec_test "-group lycooZ -o -user lycoon"
exec_test "-name foo -user"
exec_test "-name foo -group"
exec_test "-name foo -o -user lycoon"
exec_test "-group lycoon -type d -o -user lycooZ"
exec_test "tests/foo -execdir pwd ; -execdir echo -- {} -- ;"
exec_test "tests/////foo -execdir pwd ; -execdir echo -- {} -- ;"
exec_test "tests/////foo////// -execdir pwd ; -execdir echo -- {} -- ;"
exec_test "//////tests/ -execdir pwd ; -execdir echo -- {} -- ;"
exec_test "tests -execdir pwd ; -execdir echo -- {} -- ;"
exec_test "tests/ -execdir pwd ; -execdir echo -- {} -- ;"
exec_test "-execdir pwd ; -execdir echo -- {} -- ;"